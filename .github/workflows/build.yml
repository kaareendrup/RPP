# This is a simple workflow to run unit tests and code coverage
name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push and PRs
  push:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # Check credentials
  check-codeclimate-credentials:
    name: Check CodeClimate credentials
    runs-on: ubuntu-latest
    outputs:
      has_credentials: ${{ steps.setvar.outputs.has_credentials }}
    steps:
      - name: Check secrets
        id: setvar
        run: |
         if [[ "${{ secrets.CODECLIMATE_TEST_REPORTER_ID }}" != "" ]]; \
         then
           echo "Credentials to access CodeClimate found"
           echo has_credentials="true" >> $GITHUB_OUTPUT
         else
           echo "Credentials to access CodeClimate not found"
           echo has_credentials="false" >> $GITHUB_OUTPUT
         fi

  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Setup Python # Set Python version
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      # Install pip, pytest, and requirements
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -r requirements.txt
      # Test
      - name: Test with pytest
        run: |
          coverage run -m pytest tests/unit_tests.py
          coverage report -m
      # Publish coverage
      - name: Publish code coverage
        uses: paambaati/codeclimate-action@v3.0.0
        if: needs.check-codeclimate-credentials.outputs.has_credentials == 'true'
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_TEST_REPORTER_ID }}
        with:
          coverageCommand: coverage report
          coverageLocations: coverage.xml:coverage.py